class Solution:
    def mostCommonWord(self, paragraph: str, banned: List[str]) -> str:
        
	paragraph = re.split("\W+", paragraph.lower())

	paragraph = paragraph.replace("!", " ").replace("?", " ").replace("'", " ").replace(",", " ").replace(";", " ").replace(".", "  ").lower().split()

        paragraph = paragraph.lower()
	translator = paragraph.maketrans(string.punctuation, ' '*len(string.punctuation))
        paragraph = paragraph.translate(translator)
	paragraph = paragraph.split()


        for word in Counter(paragraph).most_common():
            if word not in banned:
                return word[0]





class Solution:
    def mostCommonWord(self, paragraph: str, banned: List[str]) -> str:

        normalized_str = ''.join([c.lower() if c.isalnum() else ' ' for c in paragraph])

        #2). split the string into words
        words = normalized_str.split()    
        
        
        word_dict = defaultdict(int)
        banned_items = set(banned)
        for word in words:
            if word not in banned_items:
                word_dict[word] += 1

        
        inverse = [(value, key) for key, value in word_dict.items()]
        return max(inverse)[1]
            
        